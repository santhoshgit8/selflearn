pipeline{
    agent any
    tools{
        maven "maven3"
        jdk "jdk8"
    }
        
    stages{
        stage("fetching the code"){
            steps{
            git branch: 'vp-rem', url: 'https://github.com/santhoshgit8/vprofile-project.git'
        }
    }
    stage("build the code"){
        steps{
            sh "mvn install -DskipTests"
        }
        post{
            success{
                echo "Archieving"
                archiveArtifacts artifacts: '**/target/*.war'
            }
        }
    }
    stage("unit testing"){
        steps{
           sh "mvn test"
     }
    }
    stage("checkstyle conde analysis"){
        steps{
            sh "mvn checkstyle:checkstyle"
        }
    }
    stage('Sonar Analysis') {
        environment {
            scannerHome = tool 'sonar4.7'
        }
        steps {
           withSonarQubeEnv('sonar') {
               sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
               -Dsonar.projectName=vprofile \
               -Dsonar.projectVersion=1.0 \
               -Dsonar.sources=src/ \
               -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
               -Dsonar.junit.reportsPath=target/surefire-reports/ \
               -Dsonar.jacoco.reportsPath=target/jacoco.exec \
               -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''
          }
        }
    }
    stage("Quality Gate") {
        steps {
            timeout(time: 1, unit: 'HOURS') {
                // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                // true = set pipeline to UNSTABLE, false = don't
                waitForQualityGate abortPipeline: true
            }
        }
    }
    stage("UploadArtifact"){
        steps{
            nexusArtifactUploader(
              nexusVersion: 'nexus3',
              protocol: 'http',
              nexusUrl: '172.31.11.84:8081',
              groupId: 'QA',
              version: "${env.BUILD_ID}-${env.BUILD_TIMESTAMP}",
              repository: 'vprofile',
              credentialsId: 'nexus-login',
              artifacts: [
                [artifactId: 'vproapp',
                 classifier: '',
                 file: 'target/vprofile-v2.war',
                 type: 'war']
]
)
        }
    }



        }
    }
